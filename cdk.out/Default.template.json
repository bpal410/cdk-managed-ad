{
 "Resources": {
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/Resource"
   }
  },
  "VPCpublicSubnet1Subnet325F50B2": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Default/VPC/publicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/publicSubnet1/Subnet"
   }
  },
  "VPCpublicSubnet1RouteTableF591E248": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/VPC/publicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/publicSubnet1/RouteTable"
   }
  },
  "VPCpublicSubnet1RouteTableAssociationBFFA43B7": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCpublicSubnet1RouteTableF591E248"
    },
    "SubnetId": {
     "Ref": "VPCpublicSubnet1Subnet325F50B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/publicSubnet1/RouteTableAssociation"
   }
  },
  "VPCpublicSubnet1DefaultRoute19059ECD": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCpublicSubnet1RouteTableF591E248"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "Default/VPC/publicSubnet1/DefaultRoute"
   }
  },
  "VPCpublicSubnet1EIP2D50A06D": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/VPC/publicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/publicSubnet1/EIP"
   }
  },
  "VPCpublicSubnet1NATGatewayEEDEB5A1": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCpublicSubnet1EIP2D50A06D",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCpublicSubnet1Subnet325F50B2"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/VPC/publicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VPCpublicSubnet1DefaultRoute19059ECD",
    "VPCpublicSubnet1RouteTableAssociationBFFA43B7"
   ],
   "Metadata": {
    "aws:cdk:path": "Default/VPC/publicSubnet1/NATGateway"
   }
  },
  "VPCpublicSubnet2Subnet2B2DFF71": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Default/VPC/publicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/publicSubnet2/Subnet"
   }
  },
  "VPCpublicSubnet2RouteTable55DAB1BB": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/VPC/publicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/publicSubnet2/RouteTable"
   }
  },
  "VPCpublicSubnet2RouteTableAssociation0849466B": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
    },
    "SubnetId": {
     "Ref": "VPCpublicSubnet2Subnet2B2DFF71"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/publicSubnet2/RouteTableAssociation"
   }
  },
  "VPCpublicSubnet2DefaultRoute9ED4D6BC": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "Default/VPC/publicSubnet2/DefaultRoute"
   }
  },
  "VPCpublicSubnet2EIPB6C99FBD": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/VPC/publicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/publicSubnet2/EIP"
   }
  },
  "VPCpublicSubnet2NATGateway13FC4601": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCpublicSubnet2EIPB6C99FBD",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCpublicSubnet2Subnet2B2DFF71"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/VPC/publicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VPCpublicSubnet2DefaultRoute9ED4D6BC",
    "VPCpublicSubnet2RouteTableAssociation0849466B"
   ],
   "Metadata": {
    "aws:cdk:path": "Default/VPC/publicSubnet2/NATGateway"
   }
  },
  "VPCprivateSubnet1SubnetE522290D": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "Default/VPC/privateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/privateSubnet1/Subnet"
   }
  },
  "VPCprivateSubnet1RouteTable41566AF9": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/VPC/privateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/privateSubnet1/RouteTable"
   }
  },
  "VPCprivateSubnet1RouteTableAssociation43FE0C59": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCprivateSubnet1RouteTable41566AF9"
    },
    "SubnetId": {
     "Ref": "VPCprivateSubnet1SubnetE522290D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/privateSubnet1/RouteTableAssociation"
   }
  },
  "VPCprivateSubnet1DefaultRoute68B79172": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCpublicSubnet1NATGatewayEEDEB5A1"
    },
    "RouteTableId": {
     "Ref": "VPCprivateSubnet1RouteTable41566AF9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/privateSubnet1/DefaultRoute"
   }
  },
  "VPCprivateSubnet2Subnet2F4D9530": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "Default/VPC/privateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/privateSubnet2/Subnet"
   }
  },
  "VPCprivateSubnet2RouteTableBBE8BB2B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/VPC/privateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/privateSubnet2/RouteTable"
   }
  },
  "VPCprivateSubnet2RouteTableAssociation45BBC356": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCprivateSubnet2RouteTableBBE8BB2B"
    },
    "SubnetId": {
     "Ref": "VPCprivateSubnet2Subnet2F4D9530"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/privateSubnet2/RouteTableAssociation"
   }
  },
  "VPCprivateSubnet2DefaultRouteD808B206": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCpublicSubnet2NATGateway13FC4601"
    },
    "RouteTableId": {
     "Ref": "VPCprivateSubnet2RouteTableBBE8BB2B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/privateSubnet2/DefaultRoute"
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/IGW"
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/VPC/VPCGW"
   }
  },
  "VPCRestrictDefaultSecurityGroupCustomResource59474679": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "VPCB9E5F0B4",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Default/VPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "VPCB9E5F0B4",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "Default/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200",
    "aws:asset:property": "Code"
   }
  },
  "MicrosoftADStackAdSecret528C289D": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "PasswordLength": 16
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Default/MicrosoftADStack/AdSecret/Resource"
   }
  },
  "MicrosoftADStack915700F2": {
   "Type": "AWS::DirectoryService::MicrosoftAD",
   "Properties": {
    "Edition": "Standard",
    "Name": "example.com",
    "Password": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "MicrosoftADStackAdSecret528C289D"
       },
       ":SecretString:::}}"
      ]
     ]
    },
    "VpcSettings": {
     "SubnetIds": [
      {
       "Ref": "VPCprivateSubnet1SubnetE522290D"
      },
      {
       "Ref": "VPCprivateSubnet2Subnet2F4D9530"
      }
     ],
     "VpcId": {
      "Ref": "VPCB9E5F0B4"
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/MicrosoftADStack/Resource"
   }
  },
  "MicrosoftADStackEnableDataAccessRoleF5BD4651": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/MicrosoftADStack/EnableDataAccessRole/Resource"
   }
  },
  "MicrosoftADStackEnableDataAccessRoleDefaultPolicy46999ECC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ds:DisableDirectoryDataAccess",
        "ds:EnableDirectoryDataAccess"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ds:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":directory/",
          {
           "Ref": "MicrosoftADStack915700F2"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MicrosoftADStackEnableDataAccessRoleDefaultPolicy46999ECC",
    "Roles": [
     {
      "Ref": "MicrosoftADStackEnableDataAccessRoleF5BD4651"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/MicrosoftADStack/EnableDataAccessRole/DefaultPolicy/Resource"
   }
  },
  "MicrosoftADStackEnableDirectoryDataAccessF7E40D33": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"DirectoryService\",\"action\":\"enableDirectoryDataAccess\",\"parameters\":{\"DirectoryId\":\"",
       {
        "Ref": "MicrosoftADStack915700F2"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "MicrosoftADStack915700F2"
       },
       "-data-access\"}}"
      ]
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"DirectoryService\",\"action\":\"disableDirectoryDataAccess\",\"parameters\":{\"DirectoryId\":\"",
       {
        "Ref": "MicrosoftADStack915700F2"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "MicrosoftADStack915700F2"
       },
       "-data-access\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": true
   },
   "DependsOn": [
    "MicrosoftADStackEnableDirectoryDataAccessCustomResourcePolicy24EAB48F"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Default/MicrosoftADStack/EnableDirectoryDataAccess/Resource/Default"
   }
  },
  "MicrosoftADStackEnableDirectoryDataAccessCustomResourcePolicy24EAB48F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ds:DisableDirectoryDataAccess",
        "ds:EnableDirectoryDataAccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MicrosoftADStackEnableDirectoryDataAccessCustomResourcePolicy24EAB48F",
    "Roles": [
     {
      "Ref": "MicrosoftADStackEnableDataAccessRoleF5BD4651"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/MicrosoftADStack/EnableDirectoryDataAccess/CustomResourcePolicy/Resource"
   }
  },
  "MicrosoftADStackWorkspacesDefaultRoleEE04ED66": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "workspaces.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "https://docs.aws.amazon.com/workspaces/latest/adminguide/workspaces-access-control.html#create-default-role",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonWorkSpacesServiceAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonWorkSpacesSelfServiceAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonWorkSpacesPoolServiceAccess"
       ]
      ]
     }
    ],
    "RoleName": "workspaces_DefaultRole"
   },
   "Metadata": {
    "aws:cdk:path": "Default/MicrosoftADStack/WorkspacesDefaultRole/Resource"
   }
  },
  "MicrosoftADStackWorkspacesRegisterDirectoryC43C91DA": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"WorkSpaces\",\"action\":\"registerWorkspaceDirectory\",\"parameters\":{\"DirectoryId\":\"",
       {
        "Ref": "MicrosoftADStack915700F2"
       },
       "\",\"EnableSelfService\":false,\"EnableWorkDocs\":false,\"SubnetIds\":[\"",
       {
        "Ref": "VPCprivateSubnet1SubnetE522290D"
       },
       "\",\"",
       {
        "Ref": "VPCprivateSubnet2Subnet2F4D9530"
       },
       "\"],\"UserIdentityType\":\"AWS_DIRECTORY_SERVICE\",\"WorkspaceType\":\"PERSONAL\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "MicrosoftADStack915700F2"
       },
       "-register-directory\"}}"
      ]
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"WorkSpaces\",\"action\":\"deregisterWorkspaceDirectory\",\"parameters\":{\"DirectoryId\":\"",
       {
        "Ref": "MicrosoftADStack915700F2"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "MicrosoftADStack915700F2"
       },
       "-deregister-directory\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": true
   },
   "DependsOn": [
    "MicrosoftADStackWorkspacesRegisterDirectoryCustomResourcePolicy41F0D6AD"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Default/MicrosoftADStack/WorkspacesRegisterDirectory/Resource/Default"
   }
  },
  "MicrosoftADStackWorkspacesRegisterDirectoryCustomResourcePolicy41F0D6AD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "application-autoscaling:DeleteScalingPolicy",
        "application-autoscaling:DeleteScheduledAction",
        "application-autoscaling:DeregisterScalableTarget",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingActivities",
        "application-autoscaling:DescribeScalingPolicies",
        "application-autoscaling:DescribeScheduledActions",
        "application-autoscaling:PutScalingPolicy",
        "application-autoscaling:PutScheduledAction",
        "application-autoscaling:RegisterScalableTarget",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:PutMetricAlarm",
        "ds:*",
        "ec2:AssociateRouteTable",
        "ec2:AttachInternetGateway",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:CreateInternetGateway",
        "ec2:CreateNetworkInterface",
        "ec2:CreateRoute",
        "ec2:CreateRouteTable",
        "ec2:CreateSecurityGroup",
        "ec2:CreateSubnet",
        "ec2:CreateTags",
        "ec2:CreateVpc",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteSecurityGroup",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeRouteTables",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "iam:AttachRolePolicy",
        "iam:CreatePolicy",
        "iam:CreateRole",
        "iam:GetRole",
        "iam:ListRoles",
        "iam:PutRolePolicy",
        "kms:ListAliases",
        "kms:ListKeys",
        "secretsmanager:ListSecrets",
        "sso-directory:SearchUsers",
        "sso:CreateApplication",
        "sso:DeleteApplication",
        "sso:DescribeApplication",
        "sso:DescribeInstance",
        "sso:GetApplicationGrant",
        "sso:ListInstances",
        "sso:PutApplicationAssignment",
        "sso:PutApplicationAssignmentConfiguration",
        "sso:PutApplicationAuthenticationMethod",
        "sso:PutApplicationGrant",
        "tag:GetResources",
        "workdocs:AddUserToGroup",
        "workdocs:DeregisterDirectory",
        "workdocs:RegisterDirectory",
        "workspaces:*"
       ],
       "Effect": "Allow",
       "Resource": "*",
       "Sid": "AllowWorkspacesCustomResource"
      },
      {
       "Action": "iam:PassRole",
       "Condition": {
        "StringEquals": {
         "iam:PassedToService": "workspaces.amazonaws.com"
        }
       },
       "Effect": "Allow",
       "Resource": "*",
       "Sid": "AllowPassRole"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MicrosoftADStackWorkspacesRegisterDirectoryCustomResourcePolicy41F0D6AD",
    "Roles": [
     {
      "Ref": "MicrosoftADStackEnableDataAccessRoleF5BD4651"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/MicrosoftADStack/WorkspacesRegisterDirectory/CustomResourcePolicy/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ce2f3595a340d6c519a65888ef97e3b9b64f053f83608e32cc28162e22d7d99a.zip"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "MicrosoftADStackEnableDataAccessRoleF5BD4651",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 120
   },
   "DependsOn": [
    "MicrosoftADStackEnableDataAccessRoleDefaultPolicy46999ECC",
    "MicrosoftADStackEnableDataAccessRoleF5BD4651"
   ],
   "Metadata": {
    "aws:cdk:path": "Default/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.ce2f3595a340d6c519a65888ef97e3b9b64f053f83608e32cc28162e22d7d99a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VPTWuDQBD9Lblvtq0p9GzsBzmkiJZcw7iOdhLdDTujEsT/XtQQS3t6HzzevAn008tGByvoeG3y87qiTPepgDkr6PjYowl0f7gYFRX2EEcqbrKKTNpkFmX0Fpa4RvALsgoXf/FCZmcIhJy9h0fytotH+AT5AMEOrir21ILgUryzgt7iPTAvualQBMx3jVYGxWg8CtdgoUSv+3TS05qJDSonj0acvzL6lgzqqLB7Mt6xKyR8VQS17hM3vzBh7Coy082ZDaqCOstB9ynZskJx9r2xZvrrTqLibg6KN0dgRmEdjqB4o7eNOaNsgXFQCbJrvEEVNSyuXmRhf/M9XC5kyz+p2LuWcvRjlZrqU4FyzJkpd/S3IOuw4/8XImdzmmdal6M+8UMbBPrpWT+uTky09o0VqlEnM/4A5wMsvi4CAAA="
   },
   "Metadata": {
    "aws:cdk:path": "Default/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}